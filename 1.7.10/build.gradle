buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "cursegradle"
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.0.9'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.9'
}

def apiJson = file('D:/.M/Minecraft Modding Workspace/Indicatia/apiToken.json')
def parsedApi = new groovy.json.JsonSlurper().parseText(apiJson.text)
def mcVersion = '1.7.10'

apply plugin: 'forge'
version = "1.0.6"
group = "stevekung.mods.indicatia"
archivesBaseName = "Indicatia-All"
sourceCompatibility = targetCompatibility = "1.7"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

curseforge {
	apiKey = parsedApi.apiKey
	project {
		id = '272146'
		changelog = 'To read full change log use command /inchangelog in-game.'
		releaseType = 'release'
		addGameVersion mcVersion
		addGameVersion 'Java 7'

		mainArtifact(file('build/libs/Indicatia-' + mcVersion + '-' + version + '.jar')) {
			displayName = "Indicatia-" + mcVersion + "-" + version
		}
	}
}

dependencies {}
processResources {}

ext.coreJar = "build/libs/" + archivesBaseName + "-" + version + ".jar"
ext.coreFiles = ['stevekung/mods/indicatia/**', 'assets/indicatia/**', 'license.txt', 'META-INF/indicatia_at.cfg']

task buildJar(type: Jar, dependsOn: "rePackAllJar") {
	outputs.upToDateWhen { false }
	baseName = "Indicatia-" + mcVersion

	from(zipTree(project.ext.coreJar)) {
		includes.addAll(project.ext.coreFiles)
	}
    manifest {
        attributes.put("FMLAT", "indicatia_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

task rePackAllJar(type: Jar, dependsOn: "copyModFiles") {
	from 'temporary'
}

task copyModFiles(type: Copy, dependsOn: "reobf") {
	from(zipTree(project.ext.coreJar))
	into 'temporary'
}

task buildDeobfJar(type: Jar) {
    from sourceSets.main.output
	baseName = "Indicatia-" + mcVersion
    classifier = 'deobf'
}