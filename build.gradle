buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.0.9'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.9'
}

def api = new groovy.json.JsonSlurper().parseText(file("${api_token_path}").text)
def keystore = new groovy.json.JsonSlurper().parseText(file("${keystore_path}").text)
def mcVersion = project.mc_version

apply plugin: 'net.minecraftforge.gradle.forge'
version = project.version
group = "stevekung.mods.indicatia"
archivesBaseName = "Indicatia-All"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.11.2-13.20.1.2588"
    runDir = "run"
    mappings = "snapshot_20161220"
    makeObfSourceJar = false

    replace '@FINGERPRINT@', keystore.sha1
    replaceIn "IndicatiaMod.java"
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

ext.finalJar = "build/libs/" + "Indicatia-" + mcVersion + "-" + version + ".jar"
ext.coreJar = "build/libs/" + archivesBaseName + "-" + version + ".jar"
ext.coreFiles = ['stevekung/mods/indicatia/**', 'assets/indicatia/**', 'license.txt', 'META-INF/indicatia_at.cfg']
ext.internalFiles = ['stevekung/mods/indicatia/internal/**']

curseforge {
    apiKey = api.indicatia
    project {
        id = '272146'
        changelog = 'To read full change log use command /inchangelog in-game.\n\n or follow this link: https://raw.githubusercontent.com/SteveKunG/Indicatia/' + mcVersion + '/src/main/resources/assets/indicatia/change_log.txt'
        releaseType = 'release'
        addGameVersion mcVersion

        mainArtifact(file('build/libs/Indicatia-' + mcVersion + '-' + version + '.jar')) {
            displayName = "Indicatia-" + mcVersion + "-" + version
        }
    }
}

// signing jar first
task buildJar(type: SignJar, dependsOn: "processJar") {
    keyStore = keystore.keystore_path
    alias = keystore.alias
    storePass = keystore.keystore_pass
    keyPass = keystore.keystore_pass
    inputFile = project.ext.finalJar
    outputFile = project.ext.finalJar
}

// processing jar
task processJar(type: Jar, dependsOn: "rePackAllJar") {
    outputs.upToDateWhen { false }
    baseName = "Indicatia-" + mcVersion

    from(zipTree(project.ext.coreJar)) {
        includes.addAll(project.ext.coreFiles)
    }
    manifest {
        attributes.put("FMLAT", "indicatia_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

task rePackAllJar(type: Jar, dependsOn: "copyModFiles") {
    from 'temporary'
}

task copyModFiles(type: Copy, dependsOn: "reobfJar") {
    from(zipTree(project.ext.coreJar))
    into 'temporary'
}

task deleteTemporary(type: Delete) {
    delete 'temporary'
}

task buildDeobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes.put("FMLAT", "indicatia_at.cfg")
        attributes.put("FMLCorePluginContainsFMLMod", "true")
    }
}

buildJar.finalizedBy(deleteTemporary)