buildscript {
    repositories {
        maven { url "https://files.minecraftforge.net/maven" }
        maven { url "https://repo.spongepowered.org/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

def mcVersion = project.mc_version
def username = project.username
def password = project.password

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"
apply plugin: "eclipse"

import net.minecraftforge.gradle.common.task.SignJar

version = project.version
group = "com.stevekung.indicatia"
archivesBaseName = "Indicatia-All"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = 1.8
println("Java: " + System.getProperty("java.version") + " JVM: " + System.getProperty("java.vm.version") + "(" + System.getProperty("java.vendor") + ") Arch: " + System.getProperty("os.arch"))

minecraft {
    mappings channel: "snapshot", version: "${mcp_mapping}"
    accessTransformer file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")
            source sourceSets.main
            args "--mixin", "mixins.indicatia.json", "--username", username, "--password", password
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
    compile "org.spongepowered:mixin:0.8.1-SNAPSHOT"

    if (new File("libs/SteveKunG's-Lib-${mc_version}-${stevekung_lib_version}-deobf.jar").exists())
    {
        compile files("libs/SteveKunG's-Lib-${mc_version}-${stevekung_lib_version}-deobf.jar")
        println("Using existing deobf artifact")
    }
    else
    {
        compile "stevekungs-lib:SteveKunG's-Lib-${mc_version}:${stevekung_lib_version}:deobf"
        println("Using CurseForge deobf artifact")
    }
}

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "http://repo.spongepowered.org/maven/"
    }
    maven {
        url "https://minecraft.curseforge.com/api/maven/"
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.indicatia.refmap.json"
    }
}

jar {
    manifest {
        attributes("MixinConnector": "com.stevekung.indicatia.core.IndicatiaMixinConnector"
        )
    }
    baseName = "Indicatia-" + mcVersion
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
	baseName = "Indicatia-" + mcVersion
    classifier = "sources"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    manifest {
        attributes("MixinConnector": "com.stevekung.indicatia.core.IndicatiaMixinConnector"
        )
    }
    baseName = "Indicatia-" + mcVersion
    classifier = "deobf"
}

artifacts {
    archives sourcesJar
    archives deobfJar
}

curseforge {
	if (project.hasProperty('upload_api_key') {
	    apiKey = project.upload_api_key
	    project {
	        id = "272146"
	        changelog = file("CHANGE_LOG.md")
	        changelogType = "markdown"
	        releaseType = "release"
	        addGameVersion mcVersion
	
	        mainArtifact(jar) {
	            displayName = "Indicatia-" + mcVersion + "-" + version
	            relations {
	                requiredLibrary "stevekungs-lib"
	                requiredLibrary "mixinbootstrap"
	            }
	        }
	        addArtifact sourcesJar
	        addArtifact deobfJar
	    }
	}
}

task signJar(type: SignJar, dependsOn: jar) {
	if (project.hasProperty('upload_api_key') {
	    keyStore = project.keystore_path
	    alias = project.alias
	    storePass = project.keystore_pass
	    keyPass = project.keystore_pass
	    inputFile = jar.archivePath
	    outputFile = jar.archivePath
    }
}

build.dependsOn signJar
tasks.curseforge.dependsOn(build)